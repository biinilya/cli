---
kind: pipeline
type: docker
name: default

workspace:
  path: /drone/src

volumes:
  - name: cache
    temp: { }

environment:
  GOCACHE: /cache/go/build
  GOMODCACHE: /cache/go/download

steps:
  - name: deps
    image: golang:1.18.4-alpine3.15
    volumes:
      - name: cache
        path: /cache
    commands:
      - apk --no-cache add git
      - cd src
      - go get -t -d -v ./...
      - go build all
  - name: fetch
    image: docker:git
    commands:
      - git fetch --tags
  - name: release
    image: golang:1.18.4-alpine3.15
    environment:
      PRODUCTION_FIREBASE_API_KEY:
        from_secret: PRODUCTION_FIREBASE_API_KEY
      PRODUCTION_API_URL:
        from_secret: PRODUCTION_API_URL
      SENTRY_DSN:
       from_secret: SENTRY_DSN
      GITHUB_TOKEN:
        from_secret: GITHUB_TOKEN
    privileged: false
    volumes:
      - name: cache
        path: /cache
    commands:
      - export VERSION=${DRONE_TAG}
      - apk add git
      - go install github.com/goreleaser/goreleaser@latest
      - cd ./src/cmd/
      - goreleaser release -f ../../.goreleaser-prod.yml
    depends_on:
      - fetch
    when:
      ref:
        include:
          - refs/tags/v*.*.*
        exclude:
          - refs/tags/v*.*.*-rc*
  - name: pre-release
    image: golang:1.18.4-alpine3.15
    environment:
      STAGING_FIREBASE_API_KEY:
        from_secret: STAGING_FIREBASE_API_KEY
      STAGING_API_URL:
        from_secret: STAGING_API_URL
      SENTRY_DSN:
       from_secret: SENTRY_DSN
      GITHUB_TOKEN:
        from_secret: GITHUB_TOKEN
    privileged: false
    volumes:
      - name: cache
        path: /cache
    commands:
      - apk add git
      - export VERSION=${DRONE_TAG}
      - go install github.com/goreleaser/goreleaser@latest
      - cd ./src/cmd/
      - goreleaser release -f ../../.goreleaser-stage.yaml
    depends_on:
      - fetch
    when:
      ref:
        - refs/tags/v*.*.*-rc*
trigger:
  event:
    - tag